#include<iostream>
#include<string>

using namespace std;

#define True 1
#define False 0

bool ok_chscrb = False;



// 3. En la funcion printStruct utilice un puntero a la estructura local_struct, aritmetica de punteros y conversión explícita (type casting)
// para imprimir el valor de los miembros de la estructura local declarada en la función.
// Dato1: NO debe utilizarse el operador punto (.) ni el operador flecha (->) Solo el puntero a local_struct y aritmetica de punteros.
// Dato2: Para imprimir los valores utilice la función "cout". Ejemplo: cout<<var_x<<endl;
// Enlaces útiles: http://ecomputernotes.com/what-is-c/function-a-pointer/type-casting-of-pointers
//                 https://es.wikibooks.org/wiki/Programaci%C3%B3n_en_C/Punteros
//                 https://dgvergel.blogspot.com/2015/02/gestion-de-memoria-iii.html
//                 https://www.taringa.net/+apuntes_y_monografias/c-alineamiento-de-memoria-en-structs-clases_waqeq


/*Por favor NO borre las lineas de codigo siguientes que definen la estructura */
struct Clase
    {
        char mem1 = 'D';
        double mem2 = 12345678987654321.88888888888889;
        unsigned short mem3 = 4554;
        float mem4 = 3.14159;
        long long int mem5 = 5444333222;
        char mem6 = 'X';
        int mem7 = 434776;
        double mem8 = 2.35656778457911;
    } ;

void printStruct(void)
{
    struct Clase local_struct; /*NO borre esta linea con la declaracion de la estructura local_struct */

    //De aqui en adelante se debe implementar la lógica en código de C++
    struct Clase *ptr=&local_struct;
    struct Clase *ptr2;
    struct Clase mem1;

    ptr2=&mem1;
    ptr=ptr2;

    //puntero = &local_struct;
    //cout <<(ptr+2)<< endl;
        cout <<*((char*)ptr)<< endl;
        cout <<*((double*)ptr+1)<< endl;
        cout <<*((unsigned short *)ptr+8)<< endl;
        cout <<*((float *)ptr+5)<< endl;
        cout <<*((long long int *)ptr+3)<< endl;
        cout <<*((char*)ptr+32)<< endl;
        cout <<*((int *)ptr+9)<< endl;
        cout <<*((double *)ptr+5)<< endl;
     
}


/* NO es necesario que modifique nada de la función main */

int main()
{

    //3.
    printStruct();

}
